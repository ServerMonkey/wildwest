# This file defines what Ansible roles, collections and none-ansible scripts
# will be usable by WildWest, as 'actions': <NAMESPACE>.<ACTION> .
# Read more: https://galaxy.ansible.com/docs/contributing/namespaces.html
#
# Default Ansible only makes use of Galaxy-collections and role-namespaces
# WildWest introduces the use of ansible-tasks inside namespaces. The same
# goes for loose shellscripts and playbooks. They are now usable as a
# Ansible namespace structure. Meaning shellscripts and playbooks that don't
# exist as a role or galaxy package, now have a <NAMESPACE>.<FILE> structure.
#
# Default Ansibles namespace structure is:
#  namespace.[role | collection]_name
# WildWests namespace structure is now:
#  namespace.[role | collection | task | script | playbook]_name
#
# In WildWest, a role or collection of a namespace is called 'actionspace'.
# And a role, task, script or playbook of an actionspace are
# called 'actions' or 'wildwest-actions'.
# In documentation this can be denoted as:
# <NAMESPACE>.<ACTIONSPACE>.<ACTION> or <NAMESPACE>.<ACTION>

[settings]
# what software to use to generate the inventory
inventorymaker_src=default

[galaxy-playbooks]
# namespace of a galaxy collection
# <GALAXY_NAMESPACE>.<COLLECTION_NAME>

[galaxy-roles]
# namespace of a role inside a galaxy collection
# <GALAXY_NAMESPACE>.<ROLE_NAME>

[role]
# namespace of a role
# <ANSIBLE_ROLE_NAMESPACE>.<ROLE_NAME>

[tasks-from-roles]
# namespace of a task inside a role
# <ANSIBLE_ROLE_NAMESPACE>.<TASK_NAME>

[playbooks-and-scripts]
# path to a folder where shell scripts (*.sh) and playbooks (.yml) reside
# <PARENT_FOLDER>.<SUB_FOLDER_WITH_SCRIPTS_OR_PLAYBOOKS>
# best to give the PARENT_FOLDER a username, e.g. the same as GALAXY_NAMESPACE
# The only variable available is '$HOME'. Hidden folders that start with '.'
# will be renamed to be without the dot. E.g.:
# '$HOME/.myapp/playbooks' will become 'myapp.playbooks'
