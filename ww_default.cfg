# This file defines what Ansible roles, collections and none-ansible scripts
# will be usable by wildwest. To understand this file you first need to
# understand how the Ansible namespace structure works:
# https://galaxy.ansible.com/docs/contributing/namespaces.html
#
# Ansible uses Galaxy-collections or roles as part of a namespace.
# Wildwest builds upon Ansible namespaces and adds a new functionality,
# which enables the use of ansible-tasks, scripts and individual playbooks
# together with namespaces. These are now usable as a namespace structure.
# This means that tasks, scripts and playbooks, that are not part of a
# role or Galaxy-collection, can now be used via the namespace structure.
#
# Default Ansible namespace structure is:
#  namespace.[ role | collection ]
# wildwest namespace structure is:
#  namespace.[ role | collection | task | script | playbook ]
#
# When talking about a namespace in wildwest, it's important to use the term
# 'wildwest namespace' because wildwest uses a different namespace.
#
# A role, task, script or playbook of a wildwest namespace is called 'action'.
# With other words, Ansible's <NAMESPACE>.<ROLE OR COLLECTION> is turned into
# <WILDWEST_NAMESPACE>.<ACTION>

[settings]
inventorymaker_src = default
# inventorymaker_src points to a custom directory where inventorymaker's
# SSOT CSV source files are located. The default is ~/.ww/inventory_src/
# If this line is removed, inventorymaker will not be used at all.

# The next 5 sections are used to enable ansible roles, collections, tasks,
# scripts and playbooks, for the wildwest namespace structure.
# In these sections you need to point wildwest to these existing folders.
# You only need to enter the name of the respective namespace, not the full
# path (with the exception of the last section). Wildwest will automatically
# search the following folders:
# "~/.ansible/collections/ansible_collections/" and "~/.ansible/roles/"

[galaxy-playbooks]
# namespace of a galaxy collection
# placing the name of a galaxy collection here will import all playbooks from
# that collection.
# Will then be available as: <GALAXY_NAMESPACE>.<COLLECTION_NAME>

[galaxy-roles]
# namespace of all roles inside a galaxy collection
# placing the name of a galaxy collection here will import all roles from
# that collection.
# Will then be available as: <GALAXY_NAMESPACE>.<ROLE_NAME>

[role]
# namespace of a role
# placing the name of a role here will import the role as is.
# Will then be available as: <ANSIBLE_ROLE_NAMESPACE>.<ROLE_NAME>

[role-tasks]
# namespace of a role with tasks
# placing the name of a role here will import all tasks from that role.
# Will then be available as: <ANSIBLE_ROLE_NAMESPACE>.<TASK_NAME>

[scripts]
# Path to a folder where shell scripts (*.sh) and playbooks (.yml) reside.
# Use this for scripts that are not part of a role or collection.
# Will then be available as: <PARENT_FOLDER>.<FOLDER_WITH_SCRIPTS_OR_PLAYBOOKS>
# Recommend to use a username or organization name for the PARENT_FOLDER.
# The only variable available is '$HOME'. Hidden folders that start with '.'
# will be used without the dot.
